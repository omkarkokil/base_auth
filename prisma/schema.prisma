// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

enum UserRole {
    admin
    driver
    operation
    field
    sales
}

model User {
  id              String @id @default(auto()) @map("_id") @db.ObjectId
  name            String
  email           String?   @unique
  emailVerified   DateTime?
  role        UserRole @default(driver)
  hashedPassword  String
  createdAt       DateTime @default(now())
  updatedAt       DateTime @updatedAt

  accounts Account[]
}

model Account {
  id String @id @default(auto()) @map("_id") @db.ObjectId
  userId             String @db.ObjectId
  type               String
  provider           String
  providerAccountId  String
  refresh_token      String?  @db.String
  access_token       String?  @db.String
  expires_at         Int?
  token_type         String?
  scope              String?
  id_token           String?  @db.String
  session_state      String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Guest {
  id              String @id @default(auto()) @map("_id") @db.ObjectId
  name            String
  email           String?   @unique
  contact         String? 
  // filledDate      String?
  createdAt       DateTime @default(now())
  updatedAt       DateTime @updatedAt
  guestInfo GuestInfo?
}

enum channel{
  Custom
  Guest
  Brochure
  Website
  B2B
}
enum vip{
  mid
  reg
  high
  low
}

model GuestInfo {
   id              String @id @default(auto()) @map("_id") @db.ObjectId
   FormFillingDate DateTime
   Channel channel
   service String
   category String
   vip vip
   dateOfArrival DateTime
   timeOfArrival DateTime
   dateOfDeparture DateTime
   timeOfDeparture DateTime
   adult String
   adult12 String
   ch512 String
   ch35 String
   infant String
   total String
   guestId String? @db.ObjectId @unique
   guest Guest? @relation( fields: [guestId] ,  references: [id])
}
